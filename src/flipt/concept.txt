flipt (Forth Like scrIPT) (also a play on words "flipped the script")

memory required:
	- stack space, int array or something
	- name space, sequential string array?


( push the current point of execution, and disable execution until matching stop reached
) stop

name retrive value of variable
;name undind variable
:name bind int to variable
::name rebind int to variable

! goto pointer and execute until unmatched stop instruction found, then return
<x> <y> ? if y is non zero, execute at x (!)
<x> <y> ?? execute at y and if it returns non-zero, execute at x. repeat until y returns zero


1 2 add tostring print

4 offset : 200 size : size offset - ; ;

200 ::size
;size

200 ( :size size 4 - ;size ) !

( ;bind ) unbind: unbind!
